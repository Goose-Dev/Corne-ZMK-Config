#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        carrot {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <18 30>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 31>;
            layers = <0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
            layers = <0>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <20 32>;
            layers = <0>;
        };

        leftparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <20 19>;
            layers = <0>;
        };

        rightparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            layers = <0>;
        };

        rightbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
            layers = <0>;
        };

        leftbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 31>;
            layers = <0>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <33 21>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <21 9>;
            layers = <0>;
        };

        ScreenShot {
            bindings = <&kp LG(LS(S))>;
            key-positions = <3 2>;
            layers = <0>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <15 27>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 4>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <17 29>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <26 14>;
            layers = <0>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <14 2>;
            layers = <0>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <26 27>;
            layers = <0>;
        };

        greater {
            bindings = <&kp GREATER_THAN>;
            key-positions = <16 15>;
            layers = <0>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <15 14>;
            layers = <0>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
            layers = <0>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <5 6>;
            layers = <3>;
        };
    };

    behaviors {
        HoldTapKpKp: HoldTapKpKp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPKPKP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Main";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_GUI
                          &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp TAB
            >;
        };

        Num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Num";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp N6           &kp N7  &kp N8  &kp N9  &kp N0           &kp BSPC
&trans  &trans  &trans  &trans  &trans  &kp LEFT_GUI    &kp KP_ASTERISK  &kp N4  &kp N5  &kp N6  &kp KP_SUBTRACT  &kp LS(KP_PLUS)
&trans  &trans  &trans  &trans  &trans  &trans          &kp KP_DIVIDE    &kp N1  &kp N2  &kp N3  &kp KP_DOT       &kp KP_NUMLOCK
                        &trans  &trans  &trans          &trans           &mo 3   &kp N0
            >;
        };

        Func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Func";
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &kp DELETE
&kp F1     &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &trans     &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &trans     &trans    &trans     &trans    &trans     &trans
                             &trans    &trans    &trans       &trans     &trans    &trans
            >;
        };

        RST {
            display-name = "RST";
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
